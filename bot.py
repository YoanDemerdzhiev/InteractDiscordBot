import os
import re 
import asyncio
from dotenv import load_dotenv

import discord
from discord.ext import commands, tasks
from discord.ui import Button, View

import gspread
from oauth2client.service_account import ServiceAccountCredentials  

load_dotenv()
DISCORD_TOKEN = os.getenv('DISCORD_TOKEN')
SHEET_KEY = os.getenv('SHEET_KEY')
CREDENTIALS_FILE = 'credentials.json'
GUILD_ID = 1417139813617893399
VERIFY_CHANNEL_ID = 1417139814465273975
UPDATE_CHANNEL_ID = 1417423373507498108

intents = discord.Intents.default()
intents.message_content = True
intents.members = True
bot = commands.Bot(command_prefix='!', intents=intents)

def get_sheet():
    scope = ["https://www.googleapis.com/auth/spreadsheets.readonly"]
    creds = ServiceAccountCredentials.from_json_keyfile_name(CREDENTIALS_FILE, scope)
    client = gspread.authorize(creds)
    sheet = client.open_by_key(SHEET_KEY).sheet1
    return sheet


def normalize_phone(p: str) -> str:
    digits = re.sub(r"\D", '',str(p or ''))


    if digits.startswith("359") and len(digits) > 3:
            digits = "0" + digits[3:]

    elif digits.startswith("00359") and len(digits) > 5:
            digits = "0" + digits[5:]

    elif len(digits) == 9 and digits.startswith("8"):
            digits = "0" + digits

    return digits

def find_in_sheet(phone: str):
    sheet = get_sheet()
    records = sheet.get_all_records()
    phone_norm = normalize_phone(phone)

    for row in records:
        row_phone = normalize_phone(row.get('–¢–µ–ª–µ—Ñ–æ–Ω –∑–∞ –∫–æ–Ω—Ç–∞–∫—Ç'))
        if row_phone == phone_norm:
            return True, row
    return False, None

class VerificationView(View):
    def __init__(self):
        super().__init__(timeout=None)
        self.add_item(Button(label="–í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–∞–π –º–µ", style=discord.ButtonStyle.green, custom_id="verify_button"))

class UpdateView(View):
    def __init__(self):
        super().__init__(timeout=None)
        self.add_item(Button(label="–ê–∫—Ç—É–∞–ª–∏–∑–∏—Ä–∞–π –º–µ", style=discord.ButtonStyle.red, custom_id="update_button"))

@bot.event
async def on_ready():
    print(f'–í–ª—è–∑–æ—Ö –∫–∞—Ç–æ {bot.user}')
    guild = bot.get_guild(GUILD_ID)

    verify_channel = guild.get_channel(VERIFY_CHANNEL_ID)
    if verify_channel:
        embed = discord.Embed(
            title="–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –Ω–∞ –Ω–æ–≤–∏ —á–ª–µ–Ω–æ–≤–µ",
            description="–ù–∞—Ç–∏—Å–Ω–∏ –±—É—Ç–æ–Ω–∞ –ø–æ-–¥–æ–ª—É, –∑–∞ –¥–∞ –∑–∞–ø–æ—á–Ω–µ—à –ø—Ä–æ—Ü–µ—Å–∞ –Ω–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –∏ –ø–æ–ª—É—á–∏—à –¥–æ—Å—Ç—ä–ø –¥–æ —Å—ä—Ä–≤—ä—Ä–∞.",
            color=discord.Color.green()
        )
        embed.set_footer(text="–ë–æ—Ç—ä—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —â–µ —Å—ä–∑–¥–∞–¥–µ —á–∞—Å—Ç–µ–Ω –∫–∞–Ω–∞–ª –∑–∞ —Ç–µ–±.")
        
        await verify_channel.send(embed=embed, view=VerificationView())

    update_channel = guild.get_channel(UPDATE_CHANNEL_ID)
    if update_channel:
        embed = discord.Embed(
            title=" –ê–∫—Ç—É–∞–ª–∏–∑–∏—Ä–∞–Ω–µ",
            description="–ù–∞—Ç–∏—Å–Ω–∏ –±—É—Ç–æ–Ω–∞ –ø–æ-–¥–æ–ª—É, –∑–∞ –¥–∞ –∞–∫—Ç—É–∞–ª–∏–∑–∏—Ä–∞—à —Å—Ç–∞—Ç—É—Å–∞ —Å–∏.",
            color=discord.Color.red()
        )

        await update_channel.send(embed=embed, view=UpdateView())
    

@bot.event
async def on_interaction(interaction: discord.Interaction):
    if interaction.type == discord.InteractionType.component:
        user = interaction.user
        guild = interaction.guild

        if interaction.data.get("custom_id") == "verify_button":
            

            overwrites = {
                guild.default_role: discord.PermissionOverwrite(read_messages=False),
                user: discord.PermissionOverwrite(read_messages=True, send_messages=True),
                guild.me: discord.PermissionOverwrite(read_messages=True, send_messages=True)
            }
                
            private_channel = await guild.create_text_channel(
                f"verification-{user.name}", overwrites=overwrites
            )

            await interaction.response.send_message(
            "‚úÖ –°—ä–∑–¥–∞–¥–æ—Ö —á–∞—Å—Ç–µ–Ω –∫–∞–Ω–∞–ª –∑–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è—Ç–∞ —Ç–∏!", 
            ephemeral=True
            )

            await private_channel.send(
                f"–ó–¥—Ä–∞–≤–µ–π {user.mention}, –º–æ–ª—è –≤—ä–≤–µ–¥–∏ —Å–≤–æ—è **—Ç–µ–ª–µ—Ñ–æ–Ω–µ–Ω –Ω–æ–º–µ—Ä**:"
            )

            def check(m):
                return m.author == user and m.channel == private_channel

            try:
                msg = await bot.wait_for('message', check=check, timeout=300) 
                phone = msg.content.strip()
            except asyncio.TimeoutError:
                try:
                    await private_channel.send("‚ùå –ò–∑—Ç–µ—á–µ –≤—Ä–µ–º–µ—Ç–æ. –ú–æ–ª—è –æ–ø–∏—Ç–∞–π—Ç–µ –æ—Ç–Ω–æ–≤–æ.")
                    await asyncio.sleep(5)
                    await private_channel.send("‚è≥ –ö–∞–Ω–∞–ª—ä—Ç —â–µ —Å–µ –∑–∞—Ç–≤–æ—Ä–∏ —Å–ª–µ–¥ 30 —Å–µ–∫—É–Ω–¥–∏.")
                    await asyncio.sleep(30)
                    await private_channel.delete()
                except discord.errors.NotFound:
                    pass
                return
            
            found, row = find_in_sheet(phone)
            if not found:
                await private_channel.send("‚ùå –¢–µ–ª–µ—Ñ–æ–Ω—ä—Ç –Ω–µ –µ –Ω–∞–º–µ—Ä–µ–Ω.")
                await asyncio.sleep(5)
                await private_channel.send("‚è≥ –ö–∞–Ω–∞–ª—ä—Ç —â–µ —Å–µ –∑–∞—Ç–≤–æ—Ä–∏ —Å–ª–µ–¥ 30 —Å–µ–∫—É–Ω–¥–∏.")
                await asyncio.sleep(30)
                await private_channel.delete()
                return
             
            await private_channel.send("‚úÖ –¢–µ–ª–µ—Ñ–æ–Ω—ä—Ç –µ –Ω–∞–º–µ—Ä–µ–Ω. –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–∞–Ω —Å—Ç–µ!")
            
            full_name = row.get("–ò–º–µ –∏ —Ñ–∞–º–∏–ª–∏—è")
            if full_name:
                try:
                    await user.edit(nick=full_name)
                except discord.Forbidden:
                    await private_channel.send("‚ö†Ô∏è –ù—è–º–∞–º –ø—Ä–∞–≤–∞ –¥–∞ –ø—Ä–æ–º–µ–Ω—è –Ω–∏–∫–Ω–µ–π–º–∞ —Ç–∏.")
            
            value = str(row.get("–û—Ñ–∏—Ü–∏–∞–ª–µ–Ω —á–ª–µ–Ω") or "").strip().upper()
            verified = value == "TRUE"
            member_role = discord.utils.get(guild.roles, name="–ß–ª–µ–Ω")
            candidate_role = discord.utils.get(guild.roles, name="–ö–∞–Ω–¥–∏–¥–∞—Ç-—á–ª–µ–Ω")

            if verified:  
                await user.add_roles(member_role)
                await user.remove_roles(candidate_role)
                await private_channel.send("üîµ –í–µ—á–µ —Å—Ç–µ **—á–ª–µ–Ω**!")
            else:
                await user.add_roles(candidate_role)
                await private_channel.send("üî¥ –í–µ—á–µ —Å—Ç–µ **–∫–∞–Ω–¥–∏–¥–∞—Ç-—á–ª–µ–Ω**!")

            await asyncio.sleep(5)
            await private_channel.send("‚è≥ –ö–∞–Ω–∞–ª—ä—Ç —â–µ —Å–µ –∑–∞—Ç–≤–æ—Ä–∏ —Å–ª–µ–¥ 30 —Å–µ–∫—É–Ω–¥–∏.")
            await asyncio.sleep(30)
            await private_channel.delete()
        elif interaction.data.get("custom_id") == "update_button":
            await interaction.response.send_message(
                "üîÑ –°—Ç–∞—Ä—Ç–∏—Ä–∞–º –∞–∫—Ç—É–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞ —Ä–æ–ª–∏—Ç–µ —Ç–∏...", ephemeral=True
            )
            sheet = get_sheet()
            records = sheet.get_all_records()
            member = guild.get_member(user.id)
            for row in records:
                if member.nick and  member.nick == row.get("–ò–º–µ –∏ —Ñ–∞–º–∏–ª–∏—è"):
                    value = str(row.get("–û—Ñ–∏—Ü–∏–∞–ª–µ–Ω —á–ª–µ–Ω") or "").strip().upper()
                    verified = value == "TRUE"
                    member_role = discord.utils.get(guild.roles, name="–ß–ª–µ–Ω")
                    candidate_role = discord.utils.get(guild.roles, name="–ö–∞–Ω–¥–∏–¥–∞—Ç-—á–ª–µ–Ω")

                    if verified:  
                        await user.add_roles(member_role)
                        await user.remove_roles(candidate_role)
                        await interaction.followup.send("üîµ –†–æ–ª–∏—Ç–µ —Ç–∏ –±—è—Ö–∞ –∞–∫—Ç—É–∞–ª–∏–∑–∏—Ä–∞–Ω–∏. –í–µ—á–µ —Å–∏ **—á–ª–µ–Ω**!")
                    else:
                        await user.add_roles(candidate_role)
                        await user.remove_roles(member_role)
                        await interaction.followup.send("üî¥ –†–æ–ª–∏—Ç–µ —Ç–∏ –±—è—Ö–∞ –∞–∫—Ç—É–∞–ª–∏–∑–∏—Ä–∞–Ω–∏. –í–µ—á–µ —Å–∏ **–∫–∞–Ω–¥–∏–¥–∞—Ç-—á–ª–µ–Ω**!")
                    return



bot.run(DISCORD_TOKEN)